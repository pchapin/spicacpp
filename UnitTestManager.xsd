<?xml version="1.0" encoding="UTF-8"?>

<xs:schema targetNamespace="http://www.kelseymountain.org/XML/UnitTestManager_0.0"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns="http://www.kelseymountain.org/XML/UnitTestManager_0.0" elementFormDefault="qualified"
  xml:lang="en-US">

  <xs:element name="TestOutput">
    <xs:annotation>
      <xs:documentation>The root element is a container for all information related to the results
        of running a collection of test suites. This includes both meta information as well as the
        results themselves.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="MetaData" type="MetaDataType"/>
        <xs:element name="Results" type="ResultsType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="MetaDataType">
    <xs:annotation>
      <xs:documentation>The test meta data is information about the test run in general. This
        information applies to all the results and represents the environment in which all the
        tests were executed (for example: date, time, host OS, etc). Currently the content model
        for this complex type is quite minimal. The Title child element is intended to be a title
        for the entire set of test results. No specific meaning for the title is described here.
        It might typically contain the name of the library or program being
        tested.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Title" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ResultsType">
    <xs:annotation>
      <xs:documentation>The overall results are a sequence of SuiteResult elements with one
        element for each test suite.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="SuiteResult" type="SuiteResultType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SuiteResultType">
    <xs:annotation>
      <xs:documentation>Every SuiteResult is a list of TestResult elements with a possible
        Exception element or BadReturn element at the end. An Exception element, if it appears,
        applies to the immediately preceeding TestResult. The BadReturn element indicates that the
        suite function returned normally (i.e., without exception), but returned false. Notice
        that it is permitted for a suite to contain zero tests. This might arise early in
        development before tests have been written.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="TestResult" type="TestResultType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="0" maxOccurs="1">
        <xs:element name="Exception" type="ExceptionType"/>
        <xs:element name="BadReturn" type="xs:string"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="TestResultType">
    <xs:annotation>
      <xs:documentation>A suite consists of a collection of tests. Each test outputs a TestResult
        element specifying the name of the test and a possible list of test failures associated
        with that test.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Failure" type="FailureType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ExceptionType">
    <xs:annotation>
      <xs:documentation>A test function might raise a single exception, which terminates the test
        function and the entire test suite. Exceptions can be optionally labeled with a type
        reflecting the type of exception that was thrown. The content of this element is intended
        to be the message contained inside the exception object. UnitTestManager::UnitExceptions
        and std::exceptions contain such messages.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="type" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="FailureType">
    <xs:annotation>
      <xs:documentation>A test failure is a problem that does not terminate the test function (so
        multiple failures might come from a single test function). Failures can optionally be
        decorated with location information that represents where the failure occured. The content
        of this type is intended to be a message from the test function indicating what
        failed.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="file" type="xs:string"/>
        <xs:attribute name="line" type="xs:nonNegativeInteger"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

</xs:schema>
